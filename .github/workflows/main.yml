# This is a basic workflow to help you get started with Actions

name: 自动构建 - Debug Build Channel

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: 解压 JSON
        uses: TonyBogdanov/zip@1.0
        with:
            args: unzip -qq -o ./json.jar -d ./

      - name: 解压 JLINE3
        uses: TonyBogdanov/zip@1.0
        with:
            args: unzip -qq -o ./jline3.jar -d ./

      - name: 解压 JANSI
        uses: TonyBogdanov/zip@1.0
        with:
            args: unzip -qq -o ./jansi.jar -d ./

      - name: 安装 JDK 17
        uses: actions/setup-java@v2
        with:
            distribution: 'temurin' # See 'Supported distributions' for available options
            java-version: '17'

      - name: 尝试编译项目
        run: |
            javac -d . -cp jansi.jar:jline3.jar:json.jar -encoding UTF-8 src/*.java src/console/*.java src/utils/*.java src/command/*.java src/plugins/*.java builtin-plugin/*.java
            echo "Manifest-Version: 1.0" > mf.txt
            echo "Main-Class: cn.xiaym.ndos.NDOSMain" >> mf.txt

      - name: 打包项目
        run: |
            cp builtin-plugin/plugin_meta ndosplugin/
            jar -cvmf mf.txt ndos.jar ./cn ./org ./ndosplugin

      - name: 创建 Release
        id: create_release
        uses: actions/create-release@v1.1.4
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
            owner: "XIAYM-gh"
            repo: "Nameless-DOS"
            tag_name: ${{ github.run_id }}
            release_name: Debug 自动构建 ${{ github.run_id }}
            draft: false
            prerelease: true
            body: |
                Nameless DOS 自动构建 #${{ github.run_id }}

                请直接下载此处的 ndos.jar

                注意事项:
                - 请使用JDK/JRE 17进行编译/运行

      - name: 上传 NDOS 文件
        uses: actions/upload-release-asset@v1
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
            upload_url: ${{ steps.create_release.outputs.upload_url }}
            asset_path: ./ndos.jar
            asset_name: ndos.jar
            asset_content_type: application/octet-stream

      - name: 获取以及保存 Releases 信息
        id: latest_release
        uses: InsonusK/get-latest-release@v1.0.1
        with: 
            myToken: ${{ secrets.GITHUB_TOKEN }}
            exclude_types: "release"
            view-top: 256
        run: |
            echo "LATEST-RELEASE=${{ steps.last_release.outputs.tag_name }}" > version
            echo "LATEST-DEBUG=${{ github.run_id }}" >> version

      - name: 推送版本信息到 data 分支
        run: |
            git config --global user.email "xiaym123@qq.com"
            git config --global user.name "XIAYM-gh"
            git commit -m "推送版本信息" -a
            git push --set-upstream origin data
      
